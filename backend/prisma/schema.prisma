generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           Int          @id @default(autoincrement())
  username     String       @unique
  password     String
  refreshToken String
  createdAt    DateTime     @default(now())
  messages     Message[]
  Chat         Chat[]
  member       Member[]
  requester    Friendship[] @relation(name: "request")
  receiver     Friendship[] @relation(name: "receive")
}

model Message {
  id     Int      @id @default(autoincrement())
  text   String
  sentAt DateTime @default(now())
  sentBy User     @relation(fields: [userId], references: [id])
  userId Int
}

model Chat {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  createdBy User     @relation(fields: [userId], references: [id])
  userId    Int
  member    Member[]
}

model Member {
  id     Int  @id @default(autoincrement())
  chat   Chat @relation(fields: [chatId], references: [id])
  chatId Int
  user   User @relation(fields: [userId], references: [id])
  userId Int
  role   Role @default(USER)
}

model Friendship {
  id          Int              @id @default(autoincrement())
  requester   User             @relation(name: "request", fields: [requesterId], references: [id])
  requesterId Int
  receiver    User             @relation(name: "receive", fields: [receiverId], references: [id])
  receiverId  Int
  status      FriendshipStatus @default(PENDING)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @updatedAt
}

enum FriendshipStatus {
  ACCEPTED
  PENDING
  REJECTED
}

enum Role {
  USER
  ADMIN
}
